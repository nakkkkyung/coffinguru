Phone = {
    Load: function(target, type){
        try{
            $.ajax({
                type     : "GET",
                url      : "/front/common/json/contact.json",
                dataType : "json",
                timeout  : 10000,
                success: function(Row){
                    Phone.List(Row, target, type);
                }
            });
        } catch(e){
            alert(e.description);
        }
    },
    List: function(Row, target, type){
        var target = $("#"+target);
            html = '<option value="">선택</option>\n';
            checked = '';

        for(var i=0; i<Row.Contact.phone.length; i++){
            if(target.attr("value")){
                checked = (target.attr("value").indexOf(Row.Contact.phone[i].number) > -1) ? "selected" : "";
            }
            if(Row.Contact.phone[i].type == type || type == 3){
                html +=  '<option value="'+Row.Contact.phone[i].number+'" '+checked+'>'+Row.Contact.phone[i].number+'</option>\n';
            }
        }
        target.html(html);
    }
}

Email = {
    Load: function(target, set){
        try{
            $.ajax({
                type     : "GET",
                url      : "/front/common/json/contact.json",
                dataType : "json",
                timeout  : 10000,
                success: function(Row){
                    Email.List(Row, target);
                    Email.Bind(target, set);
                }
            });
        } catch(e){
            alert(e.description);
        }
    },
    List: function(Row, target){
        var target = $("#"+target);
            html = '<option value="">직접입력</option>\n';
            checked = '';

        for(var i=0; i<Row.Contact.email.length; i++){
            if(target.attr("value")){
                checked = (target.attr("value").indexOf(Row.Contact.email[i].value) > -1) ? "selected" : "";
            }
            html += '<option value="'+Row.Contact.email[i].value+'" '+checked+'>'+Row.Contact.email[i].value+'</option>\n';
        }
        target.append(html);
    },
    Bind: function(target, set){
        var trigger = $("#"+target);
            set = $("#"+set);

        trigger.bind({
            change: function(){
                if($(this).val()){
                    set.val($(this).val());
                } else {
                    set.val($(this).val()).focus();
                }
            }
        })
    }
}

AreaData = {
    Load: function(target1, target2, mode){
        try {
            $.ajax({
                type     : "GET",
                url      : "/front/common/json/area.json",
                dataType : "json",
                timeout  : 10000,
                success  : function(Row){
                    AreaData.Sido(Row, target1, target2, mode);
                    AreaData.Bind(Row, target1, target2, mode);
                }
            });
        } catch(e){
            alert(e.description);
        }
    },
    Sido: function(Row, target1, target2, mode){
        var target1 = $("#"+target1);
            target2 = $("#"+target2);
            html = '';
            select = '';

        html = '<option value="">시/도</option>\n';
        for(var i=0; i<Row.AreaData.length; i++){
            select = (target1.attr("value") == Row.AreaData[i].SiDo) ? "selected" : "";
            html += '<option value=\"'+Row.AreaData[i].SiDo+'\" '+select+'>'+Row.AreaData[i].SiDo+'</option>';
        }

        target1.empty().html(html);
        if(target2) AreaData.Gugun(Row, target1, target2, mode, target1.find("option").index(target1.find("option:selected")));
    },
    Gugun: function(Row, target1, target2, mode, idx){
        var html = '';

        html = '<option value="">구/군</option>\n';
        if(idx > 0){
            var num = idx - 1;
            for(var i=0; i<Row.AreaData[num].GuGun.length; i++){
                select = (target2.attr("value") == Row.AreaData[num].GuGun[i]) ? "selected" : "";
                html += '<option value=\"'+Row.AreaData[num].GuGun[i]+'\" '+select+'>'+Row.AreaData[num].GuGun[i]+'</option>';
            }
        }

        target2.empty().html(html);
    },
    Bind: function(Row, target1, target2, mode){
        var target1 = $("#"+target1);
            target2 = $("#"+target2);

        target1.bind({
            change: function(){
                target1.attr("value", '');
                target2.attr("value", '');

                AreaData.Gugun(Row, target1, target2, mode, $(this).find("option").index($(this).find("option:selected")));
            }
        });
    }
}

DaumMap = {
    View: function(target, address, name){
        // 주소-좌표 변환 객체를 생성합니다
        var geocoder = new daum.maps.services.Geocoder();

        // 주소로 좌표를 검색합니다
        geocoder.addr2coord(address, function(status, result) {

            // 정상적으로 검색이 완료됐으면
             if(status === daum.maps.services.Status.OK){
                var mapContainer = document.getElementById(target), // 지도를 표시할 div
                    mapOption = {
                        center: new daum.maps.LatLng(result.addr[0].lat, result.addr[0].lng), // 지도의 중심좌표
                        level: 4 // 지도의 확대 레벨
                    };

                var map = new daum.maps.Map(mapContainer, mapOption); // 지도를 생성합니다
                    imageSrc = "/front/images/common/markerImgView.png"; // 마커 이미지의 이미지 주소입니다
                    imageSize = new daum.maps.Size(55, 64); // 마커 이미지의 이미지 크기 입니다
                    markerImage = new daum.maps.MarkerImage(imageSrc, imageSize); // 마커 이미지를 생성합니다

                // 마커를 생성합니다
                var marker = new daum.maps.Marker({
                    map: map, // 마커를 표시할 지도
                    position: new daum.maps.LatLng(result.addr[0].lat, result.addr[0].lng), // 마커를 표시할 위치
                    title : name, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
                    image : markerImage // 마커 이미지
                });
            }
        });
    },
    View2: function(target, lat, lng, name){
        var mapContainer = document.getElementById(target), // 지도를 표시할 div
            mapOption = {
                center: new daum.maps.LatLng(lat, lng), // 지도의 중심좌표
                level: 4 // 지도의 확대 레벨
            };

        var map = new daum.maps.Map(mapContainer, mapOption); // 지도를 생성합니다
            imageSrc = "/front/images/common/markerImgView.png"; // 마커 이미지의 이미지 주소입니다
            imageSize = new daum.maps.Size(65, 74); // 마커 이미지의 이미지 크기 입니다
            markerImage = new daum.maps.MarkerImage(imageSrc, imageSize); // 마커 이미지를 생성합니다

        // 마커를 생성합니다
        var marker = new daum.maps.Marker({
            map: map, // 마커를 표시할 지도
            position: new daum.maps.LatLng(lat, lng), // 마커를 표시할 위치
            title : name, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
            image : markerImage // 마커 이미지
        });
    },
    MultieMarker: function(target){
        if(navigator.geolocation){
            navigator.geolocation.getCurrentPosition(success, error, {enableHighAccuracy: false, timeout: 5000, maximumAge: 0});
        } else {
            alert("위치 정보 서비스가 꺼져 있거나 지원하지 않는 브라우저 입니다.");
        }

        function success(position){
            var mapContainer = document.getElementById(target), // 지도를 표시할 div
                mapOption = {
                    center: new daum.maps.LatLng(position.coords.latitude, position.coords.longitude), // 지도의 중심좌표
                    level: 7 // 지도의 확대 레벨
                };

            var map = new daum.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

            var imageSrc = "/front/images/common/markerImgList.png"; // 마커 이미지의 이미지 주소입니다
            var imageSize = new daum.maps.Size(51, 55); // 마커 이미지의 이미지 크기 입니다
            var markerImage = new daum.maps.MarkerImage(imageSrc, imageSize); // 마커 이미지를 생성합니다
            var overlay = new daum.maps.CustomOverlay({zIndex:1, yAnchor: 2});
            var contentNode = document.createElement('div');

            overlay.setContent(contentNode); // 커스텀 오버레이 컨텐츠를 설정합니다

            DaumMap.DataLoad(function(Row){
                for(var i=0; i<Row.count; i++){
                    var position = new daum.maps.LatLng(Row[i].lat, Row[i].lng);
                    var marker = new daum.maps.Marker({
                        map: map, // 마커를 표시할 지도
                        position: position, // 마커를 표시할 위치
                        image : markerImage // 마커 이미지
                    });

                    // 커스텀 오버레이 컨텐츠
                    var content = '<div class="balloon">'+
                            '<a href="/front/store/find_store_view.php?no='+Row[i].no+'" class="store">'+Row[i].name+'</a>' +
                            '<a href="#self" class="close"></a>'+
                            '</div>';

                    (function(marker, position, content) {
                        daum.maps.event.addListener(marker, 'click', function() {
                            contentNode.innerHTML = content;
                            overlay.setPosition(position);
                            overlay.setMap(map);

                            $(".close").unbind("click").bind("click", function(){
                                overlay.setMap(null);
                            });
                        });
                    })(marker, position, content);
                }
            });
        }

        function error(){
            alert("사용자의 위치정보를 찾을 수 없습니다.");
            return false;
        }
    },
    DataLoad: function(obj){
        try{
            $.getJSON("/front/ajax/storeList_ajax.php", function(Row){
                obj(Row);
            });
        } catch(e){
            alert(e.description);
        }
    }
}

ThemeMenu = {
    Action: function(){
        var depth1 = $('.theme_menu > li > a');

        depth1.click(function(){
            $(".theme_menu_depth2").remove();
            var no = $(this).attr("href").replace("#", "");
            var idx = $(this).parent().parent().parent().parent().index();
            var result = $.ajax({
                    type     : "POST",
                    url      : "/front/ajax/themeList_ajax.php",
                    data     : { no : no },
                    dataType : "html",
                    timeout  : 10000,
                    async: false
                }).responseText;

            $(".theme_section").eq(idx).after(result);

            depth1.parent().removeClass('on');
            $(this).parent().addClass('on');
            $('.theme_menu_depth2').hide();
            $(this).parents('.theme_section').next('.theme_menu_depth2').slideDown(700);
        });
    }
}

Comment = {
    List: function(){
        try{
            $.ajax({
                type     : "POST",
                url      : "/front/ajax/commentList_ajax.php",
                data     : $("#commentFrm").serialize(),
                dataType : "html",
                timeout  : 10000,
                success: function(result){
                    var $tmp = $("<div>").append(result);
                    var comment_list = $tmp.find(".comment_list").html();
                    var pagination_wrap = $tmp.find(".pagination_wrap").html();

                    $(".comment_list").empty().append(comment_list);
                    $(".pagination_wrap").empty().append(pagination_wrap);
                }
            });
        } catch(e){
            alert(e.description);
        }
    },
    Write: function(){
        if(!$("#content").val()){
            alert("댓글 내용을 입력하세요.");
            $("#content").focus();
            return false;
        }

        try{
            $.ajax({
                type     : "POST",
                url      : "/front/ajax/commentProc_ajax.php",
                data     : $("#commentFrm").serialize(),
                dataType : "html",
                timeout  : 10000,
                success: function(result){
                    var md = $.trim(result);

                    if(md == "write"){
                        $("#page").val(1);
                        alert("성공적으로 등록되었습니다.");
                        Comment.List();

                        if(type == 'B'){
                            $(".block_txt").show();
                            $(".txt").text("이미 응모하셨습니다.");
                            $("#content").attr('disabled', true);
                        }
                        $("#content").val('');
                    } else if(md == "close"){
                        alert("이벤트가 종료되었습니다.");
                    }
                }
            });
        } catch(e){
            alert(e.description);
        }
    },
    Del: function(no){
        var md = "del";
        if(confirm("삭제하시겠습니까?")){
            try{
                $.ajax({
                    type     : "POST",
                    url      : "/front/ajax/commentProc_ajax.php",
                    data     : { no : no, md : md },
                    dataType : "html",
                    timeout  : 10000,
                    success: function(result){
                        var md = $.trim(result);

                        if(md == "del"){
                            alert("성공적으로 삭제되었습니다.");
                            Comment.List();
                            $(".block_txt").hide();
                            $(".txt").text('');
                            $("#content").attr('disabled', false);
                        }
                    }
                });
            } catch(e){
                alert(e.description);
            }
        } else {
            return false;
        }
    },
    Page: function(page){
        $("#page").val(page);
        Comment.List();
    }
}

Functions = {
    AllCheck: function(){
        $("#AllCheck").click(function(){
            if($(this).is(":checked")){
                $("input:checkbox").prop("checked", true);
            } else {
                $("input:checkbox").prop("checked", false);
            }
        });
    },
    UrlBack: function(){
        $("#cancelBtn").click(function(){
            history.back();
        });
    },
    ClosePop: function(){
        $("#closeBtn").click(function(){
            window.close();
        });
    },
    NumberOnly: function(){
        $(".numberonly").on("keyup", function(){
            $(this).val($(this).val().replace(/[^0-9]/gi, ""));
        });
    },
    NumberHyphenOnly: function(){
        $(".numberhyphenonly").on("keyup", function(){
            $(this).val($(this).val().replace(/[^0-9:\-]/gi, ""));
        });
    },
    OneDayClose: function(target){
        $.cookie(target, 'Y', {path:'/', expires:1});
        $("#"+target).hide();
    },
    MoveLink: function(form, target, no, type){
        var form = $("#"+form);

        if(type == "designer_style" || type == "beforeafter") {
            form.find("input[name=no]").val(no);
        } else if(type == "designer") {
            $("#dno").val(no);
        } else {
            $("#no").val(no);
        }

        form.attr("action", target+".php");
        form.submit();
    },
    MoveList: function(form, target){
        var form = $("#"+form);
        form.attr("action", target+".php");
        form.submit();
    },
    MovePosition: function(type){
        var idName;

        if(type == "designer_style" || type == "beforeafter"){
            idName = "sno";
        } else if(type == "designer"){
            idName = "dno";
        } else {
            idName = "no";
        }

        if($("#"+idName).val()){
            var no = $("#"+idName).val();
                noPos = $("#"+no).position().top;
            $(window).scrollTop(noPos);
        }
    }
}

Spam = {
    Click: function(){
        $("#spamMsg").text("* 스팸방지코드를 입력해주세요.");
        $("#spamCheck").val('N');
        $("#spamcode").val("");
        $("#spamImg").attr("src", "/front/common/lib/spamImg.php?key=" + parseInt(Math.random() * 100000, 10));
        return false;
    },
    Load: function(){
        $("#spamcode").bind({
            keyup: function(){
                try{
                    $.ajax({
                        type     : "POST",
                        url      : "/front/ajax/spam_ajax.php",
                        data     : { entry : $("#spamcode").val() },
                        success: function(result){
                            if(result){
                                $("#spamCheck").val(Spam.Trim(result));

                                if(Spam.Trim(result) == 'N'){
                                    $("#spamMsg").text("* 스팸방지코드를 입력해주세요.");
                                } else if(Spam.Trim(result) == 'Y') {
                                    $("#spamMsg").text("* 입력 완료");
                                } else if(Spam.Trim(result) == 'E'){
                                    $("#spamMsg").text("* 틀렸습니다.");
                                }
                            }
                        }
                    });
                } catch(e){
                    alert(e.description);
                }
            }
        });
    },
    Trim: function(val){
        return val.replace(/(^\s*)|(\s*$)/g, "");
    }
}

MainContent = {
    Load: function(code){
        try {
            $.ajax({
                type     : "POST",
                url      : "/front/ajax/mainContent_ajax.php",
                data     : { code:code },
                timeout  : 10000,
                success  : function(result){
                    switch(code){
                        case 'A':
                            if($.cookie('top_banner') != "Y"){
                                $("#bannerSectionA").html(result);
                            }

                            $("#topBannerClose").click(function(){
                                UI.topBanner();
                                Functions.OneDayClose('top_banner');
                            });
                            break;
                        case 'B':
                            $("#bannerSectionB").html(result);
                            var mainVisual = $('.main_visual .bx-slider').bxSlider({
                                auto:true,
                                pause:7000,
                                useCSS:false,
                                onSlideAfter:function(){
                                    mainVisual.stopAuto();
                                    mainVisual.startAuto();
                                }
                            });
                            break;
                        case 'C':
                            $("#bannerSectionC").html(result);
                            var mainIntro = $('#bannerSectionC').bxSlider({
                                auto:$('#bannerSectionC').length > 1 ? true : false,
                                pager:$('#bannerSectionC').length > 1 ? true : false,
                                pause:7000,
                                onSlideAfter:function(){
                                    mainIntro.stopAuto();
                                    mainIntro.startAuto();
                                }
                            });
                            break;
                        case 'D':
                            $("#bannerSectionD").html(result);
                            break;
                        case 'E':
                            $("#bannerSectionE").html(result);
                            var mainArticle = $('.main_article .bx-slider').bxSlider({
                                auto:true,
                                pause:7000,
                                onSlideAfter:function(){
                                    mainArticle.stopAuto();
                                    mainArticle.startAuto();
                                }
                            });
                            break;
                        case 'F':
                            $("#bannerSectionF").html(result);
                            var franchiseVisual = $('.franchise_visual .bx-slider').bxSlider({
                                mode:'vertical',
                                auto:true,
                                pause:7000,
                                onSlideAfter:function(){
                                    franchiseVisual.stopAuto();
                                    franchiseVisual.startAuto();
                                }
                            });
                            break;
                        case 'G':
                            $("#bannerSectionG").html(result);
                            var franchiseBanner = $('.franchise_banner2 .bx-slider').bxSlider({
                                auto:true,
                                pause:7000,
                                pagerSelector:'.franchise_banner2 .pager',
                                onSlideAfter:function(){
                                    franchiseBanner.stopAuto();
                                    franchiseBanner.startAuto();
                                }
                            });
                            break;
                        case 'H':
                            $("#bannerSectionH").html(result);
                            break;
                        default:
                            break;
                    }
                }
            });
        } catch(e){
            alert(e.description);
        }
    }
}

PostAPI = {
    KeyDown: function(){
        if(event.keyCode == 13){
            PostAPI.Search();
        }
    },
    Search: function(){
        if(!$("#keyword").val())    {
            alert('검색하실 도로명과 건물번호를 입력해 주세요.');
            $("#keyword").focus();
            return;
        }

        $.ajax({
            url :"http://www.juso.go.kr/addrlink/addrLinkApiJsonp.do",
            type:"post",
            data:$("#searchFrm").serialize(),
            dataType:"jsonp",
            crossDomain:true,
            success:function(xmlStr){
                if(navigator.appName.indexOf("Microsoft") > -1) {
                    var xmlData = new ActiveXObject("Microsoft.XMLDOM");
                    xmlData.loadXML(xmlStr.returnXml)
                } else {
                    var xmlData = xmlStr.returnXml;
                }

                var errCode = $(xmlData).find("errorCode").text();
                var errDesc = $(xmlData).find("errorMessage").text();

                if(errCode != "0"){
                    alert(errDesc);
                } else {
                    if(xmlStr != null) {
                        PostAPI.List(xmlData);
						PostAPI.Pager(xmlData);
                    }
                }
            }
        });
    },
    List: function(xmlStr){
        var count = parseInt($(xmlStr).find("totalCount").text(), 10);
        var post, addr;
        var htmlStr = "";

		if(count > 0){
            $(xmlStr).find("juso").each(function(){
                post = $(this).find('zipNo').text();
                roadAddr = $(this).find('roadAddr').text();
                jibunAddr = $(this).find('jibunAddr').text();

                htmlStr += '<tr>\n';
                htmlStr += '<td><a href="javascript:PostAPI.Load(\''+post+'\', \''+roadAddr+'\');">'+roadAddr+'</a></td>\n';
                htmlStr += '<td><a href="javascript:PostAPI.Load(\''+post+'\', \''+jibunAddr+'\');">'+jibunAddr+'</a></td>\n';
                htmlStr += '<td>'+post+'</td>\n';
                htmlStr += '</tr>\n';
            });
        } else {
            htmlStr += '<tr>\n';
            htmlStr += '<td colspan="3">잘못 입력하였거나 검색된 내용이 없습니다.</td>\n';
            htmlStr += '</tr>\n';
        }

        $("#addrlist").empty().html(htmlStr);
    },
    Load: function(post, addr){
        $("#post").val(post);
        $("#address").val(addr);

        UI.layerPopup('#find_address', 'close');
    },
	Pager: function(xmlStr){
		var pg = parseInt($(xmlStr).find('currentPage').text(), 10);
		var totalcount = parseInt($(xmlStr).find('totalCount').text(), 10);
		var pgblock = parseInt($(xmlStr).find('countPerPage').text(), 10);

		var pgcount = Math.ceil(totalcount/pgblock);
		var nval = Math.ceil(pg/pgblock);
		var pgstart = (nval-1)*pgblock+1;
		var pgend = pgstart+pgblock-1;

		if(pgcount < pgend) pgend = pgcount;

		var pgprev = (pgstart != 1)? pgstart-pgblock:  1;
		var pgnext = (pgend+1 > pgcount)? pgcount: pgend+1;

		var html = '<div class="pagination pt20">\n';

		html += '<a href="javascript:PostAPI.PageMove(\''+pgprev+'\');" class="page_first"><span class="hide">처음</span></a>\n';

		if(pg>1) html += '<a href="javascript:PostAPI.PageMove(\''+(pg-1)+'\');" class="page_prev"><span class="hide">이전</span></a>\n';
		else html += '<a href="#self" class="page_prev"><span class="hide">이전</span></a>\n';

		html += '<span class="page">\n';
		for(i=pgstart; i<=pgend; i++){
			if(pg==i) html += '<a href="javascript:PostAPI.PageMove(\''+i+'\');"><strong class="colc74">'+i+'</strong></a>\n';
            else html += '<a href="javascript:PostAPI.PageMove(\''+i+'\');">'+i+'</a>\n';
		}
		html += '</span>';

		if(pg>0 && pg != pgcount) html += '<a href="javascript:PostAPI.PageMove(\''+(pg+1)+'\');" class="page_next"><span class="hide">다음</span></a>\n';
		else html += '<a href="#self" class="page_next"><span class="hide">다음</span></a>\n';

		html += '<a href="javascript:PostAPI.PageMove(\''+pgnext+'\');" class="page_last"><span class="hide">끝</span></a>\n';

		html += '</div>\n';

		if(totalcount > 0) $("#pager").empty().html(html).show();

	},

	PageMove: function(pg){
		$("#currentPage").val(pg);
		PostAPI.Search();
	}
}

Enable = {
    Id: function(){
        $("#id").bind({
            keyup: function(){
                try {
                    $.ajax({
                        type: "POST",
                        url: "/front/ajax/idEnable_ajax.php",
                        data: { id : $(this).val() },
                        success: function(result){
                            switch(result){
                                case '1' :
                                    $("#idMsg").text("* 아이디를 입력하세요.");
                                    $("#hid").val("N");
                                    break;
                                case '2' :
                                    $("#idMsg").text("* 6자리 이상의 영문/숫자 조합으로만 입력하세요.");
                                    $("#hid").val("N");
                                    break;
                                case '3' :
                                    $("#idMsg").text("* 사용 불가능 한 아이디입니다.");
                                    $("#hid").val("N");
                                    break;
                                case '4' :
                                    $("#idMsg").text("* 사용 가능 한 아이디입니다.");
                                    $("#hid").val("Y");
                                    break;
                                default  :
                                    break;
                            }
                        },
                        error: function(err){
                            alert("[error: " + err.status+"] 서버전송 오류가 발생했습니다.");
                        }
                    });
                } catch(e){
                    alert(e.description);
                }
            }
        });
    },
    Pw: function(){
        $("#pw, #pwck").bind({
            keyup: function(){
                try {
                    $.ajax({
                        type: "POST",
                        url: "/front/ajax/pwEnable_ajax.php",
                        data: { pw : $("#pw").val(), pwck : $("#pwck").val() },
                        success: function(result){
                            var front = result.substr(0, 1);
                                back = result.substr(1, 2);

                            switch(front){
                                case '1' :
                                    $("#pwMsg").text("* 영문, 숫자 혼합한 8자리 이상 입력해 주세요.");
                                    $("#hpw").val("N");
                                    break;
                                case '2' :
                                    $("#pwMsg").text("* 사용 가능 한 비밀번호입니다.");
                                    $("#hpw").val("Y");
                                    break;
                                default  :
                                    break;
                            }

                            switch(back){
                                case '3' :
                                    $("#pw2Msg").text("* 비밀번호 확인을 입력하세요.");
                                    $("#hpw2").val("N");
                                    break;
                                case '4' :
                                    $("#pw2Msg").text("* 비밀번호가 다릅니다.");
                                    $("#hpw2").val("N");
                                    break;
                                case '5' :
                                    $("#pw2Msg").text("* 비밀번호가 일치합니다.");
                                    $("#hpw2").val("Y");
                                    break;
                                default  :
                                    break;
                            }
                        },
                        error: function(err){
                            alert("[error: " + err.status+"] 서버전송 오류가 발생했습니다.");
                        }
                    });
                } catch(e){
                    alert(e.description);
                }
            }
        });
    }
}

Speaker = {
    Load: function(){
        $("#speaker").click(function(){
            if($("#player").hasClass('on')){
                Speaker.Remove();
            } else {
                Speaker.Add();
            }
        });
    },
    Add: function(){
        $("#player").removeClass('off').addClass('on');
        var url = '/front/midi.mp3';
        $("#player").jPlayer("clearMedia");
        $("#player").jPlayer({
            swfPath: "Jplayer.swf",
            supplied: "mp3",
            wmode: "window"
        });

        $("#player").jPlayer("setMedia", {mp3: url});
        $("#player").jPlayer("play", 0);
    },
    Remove: function(){
        $("#player").removeClass('on').addClass('off');
        $("#player").jPlayer("stop");
    }
}

FindPw = {
    Load: function(){
        FindPw.Validate();

        try{
            $.ajax({
                type     : "POST",
                url      : "/front/ajax/remember_ajax.php",
                data     : $("#fpwFrm").serialize(),
                success: function(result){
                    if(result == 1){
                        $('#fpwFrm').attr('action', 'remembers2.php').submit();
                    } else if(result == 2){
                        $('#fpwFrm').attr('action', 'find_log2.php').submit();
                    } else {
                        alert("입력 정보를 확인하세요.");
                    }
                }
            });
        } catch(e){
            alert(e.description);
        }
    },
    Validate: function(){
        if(!$("#fpw_id").val()){
            alert("아이디를 입력하세요.");
            $("#fpw_id").focus();
            return false;
        }

        if(!$("#fpw_name").val()){
            alert("성명을 입력하세요.");
            $("#fpw_name").focus();
            return false;
        }

        if(!$("#fpw_email").val()){
            alert("이메일을 입력하세요.");
            $("#fpw_email").focus();
            return false;
        }

        if($("#fpw_email").val()){
            var user_email = $("#fpw_email").val();
            var regex = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/;

            if(!regex.test(user_email)){
                alert("유효한 이메일 형식이 아닙니다.");
                $("#fpw_email").focus();
                return false;
            }
        }

        if(!$("#question").val()){
            alert("비밀번호 질문을 선택하세요.");
            $("#question").focus();
            return false;
        }

        if(!$("#answer").val()){
            alert("비밀번호 답변을 선택하세요.");
            $("#answer").focus();
            return false;
        }
    }
}

Inquiry = {
	Save: function(){
		if(!$.trim($("#qname").val())){ alert("이름을 입력해주세요."); $("#qname").focus(); return; }
		if(!$("#qtel").val()){ alert("연락처를 입력해주세요."); $("#qtel").focus(); return; }
		if(!$.trim($("#qcontent").val())){ alert("문의내용을 입력해주세요."); $("#qcontent").focus(); return; }
		if(!$("#qagreechk").is(":checked")) { alert("개인정보처리방침에 동의하신 후 이용하실 수 있습니다."); return; }
		//if(confirm("개설문의를 등록하시겠습니까?")) {
			try{
				$.ajax({
					type     : "POST",
					url      : "/front/ajax/inquiry_ajax.php",
					data     : $("#inqFrm").serialize(),
					success: function(result){
						if(result == 1) alert("개설문의가 등록되었습니다.");
						else alert("개설문의가 등록되지 못했습니다. 다시 시도해주세요.");
						$("#inqFrm")[0].reset();
					}
				});
			} catch(e){
				//alert(e.description);
			}
		//}
	}
}

$(document).ready(function(){
    Functions.AllCheck();
    Functions.UrlBack();
    Functions.ClosePop();
    Functions.NumberOnly();
    Functions.NumberHyphenOnly();

    Phone.Load('tel1', 2);
    Phone.Load('phone1', 1);
    Email.Load('email3', 'email2');

    Speaker.Load();

    $("#family_site_go").click(function(){
        if($("#family_site_select").val()){
            window.open($("#family_site_select").val(), '_blank');
        }
    });

    $(".nailthumb").nailthumb({
        width:529,
        height:200,
        method:'crop',
        fitDirection:'center center'
    });

	$(".onlynumber").on("keyup", function(){
		$(this).val($(this).val().replace(/[^0-9]/gi, ""));
	});
});